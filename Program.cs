using System.CommandLine;
using System.Xml.Linq;
using XMLConverter.Helpers;
using XMLConverter.Models;

try
{
	var inputFileOption = new Option<FileInfo?>(
		name: "--inputfile",
		description: "The file to read and convert to xml");
	var outputFileOption = new Option<string>(
		name: "--outputfile",
		description: "The name of the xml file generated by XMLConverter");

	var rootCommand = new RootCommand
	{
		inputFileOption,
		outputFileOption
	};
	

	string? inputFile = null;
	string? outputFileName = null;

	rootCommand.SetHandler((inputFileOption, outputFileNameOption) =>
	{
		inputFile = inputFileOption.Name;
		outputFileName = outputFileNameOption;
	}, inputFileOption, outputFileOption);

	await rootCommand.InvokeAsync(args);


	var inputFilePath = Path.Combine("InputFiles", inputFile);
	var source = File.ReadAllLines(inputFilePath);
	var people = new List<Person>();

	Console.WriteLine("XMLConverter running...");
	while (source.Length > 0)
	{
		var result = new PersonGenerator(source).Generate();
		people.Add(result.Person);
		source = result.People;
	}
	var doc = new XDocument(
	new XElement("People",
		from person in people
		select new XElement("person",
			new XElement("firstname", person.Fistname),
			new XElement("lastname", person.Lastname),
			person.Address != null ? new XElement("address",
				new XElement("street", person.Address.Street),
				new XElement("city", person.Address.City),
				new XElement("postalcode", person.Address.PostalCode)
				) : null,
			person.Phone != null ? new XElement("phone",
				new XElement("mobile", person.Phone.Mobil),
				new XElement("landline", person.Phone.Landline)
			) : null,
			person.Family != null ?
				from family in person.Family
				select new XElement("family",
					new XElement("name", family.Name),
					new XElement("born", family.YearOfBirth),
					family.Address != null ? new XElement("address",
						new XElement("street", family.Address.Street),
						new XElement("city", family.Address.City),
						new XElement("postalcode", family.Address.PostalCode)
					) : null,
					family.Phone != null ? new XElement("phone",
						new XElement("mobile", family.Phone.Mobil),
						new XElement("landline", family.Phone.Landline)
					) : null
			) : null
		))
	);

	var outputPath = Path.Combine("OutputFiles", outputFileName);
	var path = Directory.GetCurrentDirectory();
	doc.Save(Path.Combine(path, outputPath));
	Console.WriteLine("File successfully converted. XMLConverter is done.");
}
catch (Exception ex)
{
	Console.WriteLine(ex);
}






